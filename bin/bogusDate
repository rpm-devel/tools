#!/usr/bin/env bash
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
##@Version           :  202304021102-git
# @@Author           :  Jason Hempstead
# @@Contact          :  git-admin@casjaysdev.pro
# @@License          :  LICENSE.md
# @@ReadME           :  bogusDate --help
# @@Copyright        :  Copyright: (c) 2023 Jason Hempstead, Casjays Developments
# @@Created          :  Sunday, Apr 02, 2023 11:02 EDT
# @@File             :  bogusDate
# @@Description      :  This script automatically corrects bogus weekdays in spec files
# @@Changelog        :  newScript
# @@TODO             :  Refactor code
# @@Other            :
# @@Resource         :
# @@Terminal App     :  no
# @@sudo/root        :  no
# @@Template         :  bash/system
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
APPNAME="$(basename "$0")"
VERSION="202304021102-git"
HOME="${USER_HOME:-$HOME}"
USER="${SUDO_USER:-$USER}"
RUN_USER="${SUDO_USER:-$USER}"
SRC_DIR="${BASH_SOURCE%/*}"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Www='[A-Z][a-z][a-z]'
Mmm='[A-Z][a-z][a-z]'
DD='[0-9][0-9]'
YYYY='[12][90][0-9][0-9]'
WwwMmmDDYYYY="\($Www\) \($Mmm\) \($DD\) \($YYYY\)"
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
if [ $# -eq 0 ] || [ "$1" = "help" ] || [ "$1" = "--help" ]; then
    echo "Usage: $0 packagename.spec ..."
    exit 1
fi
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
while [[ $# -gt 0 ]]; do
    if [ ! -f "$1" ]; then
        echo "$0: $1: no such file."
        exit 1
    fi
    changelog=$(mktemp --tmpdir=. changelog-XXXXXXXXX.txt)
    sedscript=$(mktemp --tmpdir=. sedscript-XXXXXXXXX.sed)
    printf "%s\n" \
        "* $(date +'%a %b %d %Y') BogusDateBot" \
        '- Eliminated rpmbuild "bogus date" warnings due to inconsistent weekday,' \
        "  by assuming the date is correct and changing the weekday." \
        >"$changelog"
    cat "$1" |
        grep "^\* $Www $Mmm $DD $YYYY" | grep -v '^echo' |
        sed 's/^\* '"$WwwMmmDDYYYY"'.*$/echo "$(date --date="\2 \3 \4" +"%a \1 %b %d %Y")"/' |
        grep '^echo' | bash |
        grep -Ev "Mon Mon|Tue Tue|Wed Wed|Thu Thu|Fri Fri|Sat Sat|Sun Sun" |
        sort -u --key=5,5n --key=3,3M --key=4,4n |
        while read correct wrong Month Day Year; do
            date="$Month $Day $Year"
            alternatives="$wrong $Month $Day $Year --> "$(
                for ((i = -6; i < 7; i++)); do
                    date --date "$date $i day" +"%a %b %d %Y or "
                done | grep -E "$date|$wrong" | tr -d \\n
                printf "%s" "...."
            )
            printf "  %s\n" "$alternatives" >>"$changelog"
            re='^\* '"$wrong $Month $Day $Year"'\(.*\)$'
            subs='* '"$correct $Month $Day $Year"'\1\n  '"$alternatives"
            printf "%s\n" "s:$re:$subs:" >>"$sedscript"
        done
    printf "\n" >>"$changelog"
    backup="$1"-$(date --utc --ref="$1" +"%Y-%m-%d-%H-%M-%S-%NZ")
    cp -vpf "$1" "$backup"
    cat "$backup" | sed -f "$sedscript" -e '/^%changelog *$/ r '"$changelog" >"$1"
    rm -f "$changelog" "$sedscript"
    diff -u "$backup" "$1"
    shift
done
# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
# end

